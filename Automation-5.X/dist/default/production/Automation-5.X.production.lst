

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jan 12 12:11:09 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K22 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  007E21                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _card
    58  007E21  30                 	db	48
    59  007E22  44                 	db	68
    60  007E23  30                 	db	48
    61  007E24  30                 	db	48
    62  007E25  37                 	db	55
    63  007E26  37                 	db	55
    64  007E27  35                 	db	53
    65  007E28  33                 	db	51
    66  007E29  35                 	db	53
    67  007E2A  39                 	db	57
    68  007E2B  37                 	db	55
    69  007E2C  30                 	db	48
    70  007E2D  00                 	db	0
    71  0000                     _ANSELC	set	3898
    72  0000                     _ANSELB	set	3897
    73  0000                     _PORTAbits	set	3968
    74  0000                     _TRISC	set	3988
    75  0000                     _TRISB	set	3987
    76  0000                     _RCREG1	set	4014
    77  0000                     _SPBRG1	set	4015
    78  0000                     _SPBRGH1	set	4016
    79  0000                     _TXSTA1bits	set	4012
    80  0000                     _RCSTA1bits	set	4011
    81  0000                     _BAUDCON1bits	set	4024
    82  0000                     _TXSTAbits	set	4012
    83  0000                     _RCSTA1	set	4011
    84  0000                     _TXSTA1	set	4012
    85  0000                     _RC1IF	set	31989
    86                           
    87                           ; #config settings
    88  0000                     
    89                           	psect	cinit
    90  007E2E                     __pcinit:
    91                           	opt stack 0
    92  007E2E                     start_initialization:
    93                           	opt stack 0
    94  007E2E                     __initialization:
    95                           	opt stack 0
    96                           
    97                           ; Initialize objects allocated to COMRAM (13 bytes)
    98                           ; load TBLPTR registers with __pidataCOMRAM
    99  007E2E  0E21               	movlw	low __pidataCOMRAM
   100  007E30  6EF6               	movwf	tblptrl,c
   101  007E32  0E7E               	movlw	high __pidataCOMRAM
   102  007E34  6EF7               	movwf	tblptrh,c
   103  007E36  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   104  007E38  6EF8               	movwf	tblptru,c
   105  007E3A  EE00  F025         	lfsr	0,__pdataCOMRAM
   106  007E3E  EE10 F00D          	lfsr	1,13
   107  007E42                     copy_data0:
   108  007E42  0009               	tblrd		*+
   109  007E44  CFF5 FFEE          	movff	tablat,postinc0
   110  007E48  50E5               	movf	postdec1,w,c
   111  007E4A  50E1               	movf	fsr1l,w,c
   112  007E4C  E1FA               	bnz	copy_data0
   113                           
   114                           ; Clear objects allocated to COMRAM (13 bytes)
   115  007E4E  EE00  F018         	lfsr	0,__pbssCOMRAM
   116  007E52  0E0D               	movlw	13
   117  007E54                     clear_0:
   118  007E54  6AEE               	clrf	postinc0,c
   119  007E56  06E8               	decf	wreg,f,c
   120  007E58  E1FD               	bnz	clear_0
   121  007E5A                     end_of_initialization:
   122                           	opt stack 0
   123  007E5A                     __end_of__initialization:
   124                           	opt stack 0
   125  007E5A  0100               	movlb	0
   126  007E5C  EFBB  F03F         	goto	_main	;jump to C main() function
   127                           tblptru	equ	0xFF8
   128                           tblptrh	equ	0xFF7
   129                           tblptrl	equ	0xFF6
   130                           tablat	equ	0xFF5
   131                           postinc0	equ	0xFEE
   132                           wreg	equ	0xFE8
   133                           postdec1	equ	0xFE5
   134                           fsr1l	equ	0xFE1
   135                           
   136                           	psect	bssCOMRAM
   137  000018                     __pbssCOMRAM:
   138                           	opt stack 0
   139  000018                     _value:
   140                           	opt stack 0
   141  000018                     	ds	13
   142                           tblptru	equ	0xFF8
   143                           tblptrh	equ	0xFF7
   144                           tblptrl	equ	0xFF6
   145                           tablat	equ	0xFF5
   146                           postinc0	equ	0xFEE
   147                           wreg	equ	0xFE8
   148                           postdec1	equ	0xFE5
   149                           fsr1l	equ	0xFE1
   150                           
   151                           	psect	dataCOMRAM
   152  000025                     __pdataCOMRAM:
   153                           	opt stack 0
   154  000025                     _card:
   155                           	opt stack 0
   156  000025                     	ds	13
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           postinc0	equ	0xFEE
   162                           wreg	equ	0xFE8
   163                           postdec1	equ	0xFE5
   164                           fsr1l	equ	0xFE1
   165                           
   166                           	psect	cstackCOMRAM
   167  000001                     __pcstackCOMRAM:
   168                           	opt stack 0
   169  000001                     ?_strcmp:
   170                           	opt stack 0
   171  000001                     ?___lldiv:
   172                           	opt stack 0
   173  000001                     strcmp@s1:
   174                           	opt stack 0
   175  000001                     ___lldiv@dividend:
   176                           	opt stack 0
   177                           
   178                           ; 4 bytes @ 0x0
   179  000001                     	ds	2
   180  000003                     strcmp@s2:
   181                           	opt stack 0
   182                           
   183                           ; 2 bytes @ 0x2
   184  000003                     	ds	2
   185  000005                     ??_strcmp:
   186  000005                     ___lldiv@divisor:
   187                           	opt stack 0
   188                           
   189                           ; 4 bytes @ 0x4
   190  000005                     	ds	1
   191  000006                     strcmp@r:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x5
   195  000006                     	ds	3
   196  000009                     ___lldiv@quotient:
   197                           	opt stack 0
   198                           
   199                           ; 4 bytes @ 0x8
   200  000009                     	ds	4
   201  00000D                     ___lldiv@counter:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0xC
   205  00000D                     	ds	1
   206  00000E                     uart_init1@baud:
   207                           	opt stack 0
   208                           
   209                           ; 4 bytes @ 0xD
   210  00000E                     	ds	4
   211  000012                     uart_init1@n:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x11
   215  000012                     	ds	2
   216  000014                     main@c:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x13
   220  000014                     	ds	2
   221  000016                     main@i:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x15
   225  000016                     	ds	2
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 115 in file "Automation-5.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;  i               2   21[COMRAM] int 
   245 ;;  c               2   19[COMRAM] int 
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   255 ;;      Params:         0       0       0       0       0       0       0
   256 ;;      Locals:         4       0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0
   258 ;;      Totals:         4       0       0       0       0       0       0
   259 ;;Total ram usage:        4 bytes
   260 ;; Hardware stack levels required when called:    2
   261 ;; This function calls:
   262 ;;		_strcmp
   263 ;;		_uart_init1
   264 ;;		_uart_rec1
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text0
   271  007F76                     __ptext0:
   272                           	opt stack 0
   273  007F76                     _main:
   274                           	opt stack 29
   275                           
   276                           ;Automation-5.c: 116: ANSELB=0;
   277                           
   278                           ;incstack = 0
   279  007F76  0E00               	movlw	0
   280  007F78  010F               	movlb	15	; () banked
   281  007F7A  6F39               	movwf	57,b	;volatile
   282                           
   283                           ;Automation-5.c: 117: TRISB=0x00;
   284  007F7C  0E00               	movlw	0
   285  007F7E  6E93               	movwf	3987,c	;volatile
   286                           
   287                           ;Automation-5.c: 118: ANSELC=0;
   288  007F80  0E00               	movlw	0
   289  007F82  010F               	movlb	15	; () banked
   290  007F84  6F3A               	movwf	58,b	;volatile
   291                           
   292                           ;Automation-5.c: 119: TRISC=0x80;
   293  007F86  0E80               	movlw	128
   294  007F88  6E94               	movwf	3988,c	;volatile
   295                           
   296                           ; BSR set to: 15
   297                           ;Automation-5.c: 120: PORTAbits.RA4=0;
   298  007F8A  9880               	bcf	3968,4,c	;volatile
   299                           
   300                           ; BSR set to: 15
   301                           ;Automation-5.c: 121: uart_init1(9600);
   302  007F8C  0E80               	movlw	128
   303  007F8E  6E0E               	movwf	uart_init1@baud,c
   304  007F90  0E25               	movlw	37
   305  007F92  6E0F               	movwf	uart_init1@baud+1,c
   306  007F94  0E00               	movlw	0
   307  007F96  6E10               	movwf	uart_init1@baud+2,c
   308  007F98  0E00               	movlw	0
   309  007F9A  6E11               	movwf	uart_init1@baud+3,c
   310  007F9C  EC53  F03F         	call	_uart_init1	;wreg free
   311  007FA0                     l823:
   312                           
   313                           ;Automation-5.c: 124: {
   314                           ;Automation-5.c: 125: for(i=0;i<12;i++)
   315  007FA0  0E00               	movlw	0
   316  007FA2  6E17               	movwf	main@i+1,c
   317  007FA4  0E00               	movlw	0
   318  007FA6  6E16               	movwf	main@i,c
   319  007FA8                     l825:
   320  007FA8  BE17               	btfsc	main@i+1,7,c
   321  007FAA  D006               	goto	l829
   322  007FAC  5017               	movf	main@i+1,w,c
   323  007FAE  E110               	bnz	l835
   324  007FB0  0E0C               	movlw	12
   325  007FB2  5C16               	subwf	main@i,w,c
   326  007FB4  B0D8               	btfsc	status,0,c
   327  007FB6  D00C               	goto	l835
   328  007FB8                     l829:
   329                           
   330                           ;Automation-5.c: 126: {
   331                           ;Automation-5.c: 127: value[i]=uart_rec1();
   332  007FB8  0E18               	movlw	low _value
   333  007FBA  2416               	addwf	main@i,w,c
   334  007FBC  6ED9               	movwf	fsr2l,c
   335  007FBE  0E00               	movlw	high _value
   336  007FC0  2017               	addwfc	main@i+1,w,c
   337  007FC2  6EDA               	movwf	fsr2h,c
   338  007FC4  EC0C  F03F         	call	_uart_rec1	;wreg free
   339  007FC8  6EDF               	movwf	indf2,c
   340  007FCA  4A16               	infsnz	main@i,f,c
   341  007FCC  2A17               	incf	main@i+1,f,c
   342  007FCE  D7EC               	goto	l825
   343  007FD0                     l835:
   344                           
   345                           ;Automation-5.c: 128: }
   346                           ;Automation-5.c: 129: value[12]='\0';
   347  007FD0  0E00               	movlw	0
   348  007FD2  6E24               	movwf	_value+12,c
   349                           
   350                           ;Automation-5.c: 130: c=strcmp(value,card);
   351  007FD4  0E18               	movlw	low _value
   352  007FD6  6E01               	movwf	strcmp@s1,c
   353  007FD8  0E00               	movlw	high _value
   354  007FDA  6E02               	movwf	strcmp@s1+1,c
   355  007FDC  0E25               	movlw	low _card
   356  007FDE  6E03               	movwf	strcmp@s2,c
   357  007FE0  0E00               	movlw	high _card
   358  007FE2  6E04               	movwf	strcmp@s2+1,c
   359  007FE4  EC30  F03F         	call	_strcmp	;wreg free
   360  007FE8  C001  F014         	movff	?_strcmp,main@c
   361  007FEC  C002  F015         	movff	?_strcmp+1,main@c+1
   362                           
   363                           ;Automation-5.c: 131: if(c==0)
   364  007FF0  5014               	movf	main@c,w,c
   365  007FF2  1015               	iorwf	main@c+1,w,c
   366  007FF4  A4D8               	btfss	status,2,c
   367  007FF6  D002               	goto	l51
   368                           
   369                           ;Automation-5.c: 132: {
   370                           ;Automation-5.c: 133: PORTAbits.RA4=1;
   371  007FF8  8880               	bsf	3968,4,c	;volatile
   372                           
   373                           ;Automation-5.c: 134: }
   374  007FFA  D7D2               	goto	l823
   375  007FFC                     l51:
   376                           
   377                           ;Automation-5.c: 135: else
   378                           ;Automation-5.c: 136: {
   379                           ;Automation-5.c: 137: PORTAbits.RA4=0;
   380  007FFC  9880               	bcf	3968,4,c	;volatile
   381  007FFE  D7D0               	goto	l823
   382  008000                     __end_of_main:
   383                           	opt stack 0
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           postdec1	equ	0xFE5
   391                           fsr1l	equ	0xFE1
   392                           indf2	equ	0xFDF
   393                           fsr2h	equ	0xFDA
   394                           fsr2l	equ	0xFD9
   395                           status	equ	0xFD8
   396                           
   397 ;; *************** function _uart_rec1 *****************
   398 ;; Defined at:
   399 ;;		line 106 in file "Automation-5.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      unsigned char 
   406 ;; Registers used:
   407 ;;		wreg, status,2
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   413 ;;      Params:         0       0       0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text1
   427  007E18                     __ptext1:
   428                           	opt stack 0
   429  007E18                     _uart_rec1:
   430                           	opt stack 30
   431  007E18                     l38:
   432  007E18  AA9E               	btfss	3998,5,c	;volatile
   433  007E1A  D7FE               	goto	l38
   434                           
   435                           ;Automation-5.c: 109: return RCREG1;
   436  007E1C  50AE               	movf	4014,w,c	;volatile
   437  007E1E  0012               	return	
   438  007E20                     __end_of_uart_rec1:
   439                           	opt stack 0
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           indf2	equ	0xFDF
   449                           fsr2h	equ	0xFDA
   450                           fsr2l	equ	0xFD9
   451                           status	equ	0xFD8
   452                           
   453 ;; *************** function _uart_init1 *****************
   454 ;; Defined at:
   455 ;;		line 87 in file "Automation-5.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;  baud            4   13[COMRAM] unsigned long 
   458 ;; Auto vars:     Size  Location     Type
   459 ;;  n               2   17[COMRAM] unsigned int 
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   469 ;;      Params:         4       0       0       0       0       0       0
   470 ;;      Locals:         2       0       0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0
   472 ;;      Totals:         6       0       0       0       0       0       0
   473 ;;Total ram usage:        6 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; Hardware stack levels required when called:    1
   476 ;; This function calls:
   477 ;;		___lldiv
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text2
   484  007EA6                     __ptext2:
   485                           	opt stack 0
   486  007EA6                     _uart_init1:
   487                           	opt stack 29
   488                           
   489                           ;Automation-5.c: 89: unsigned int n;
   490                           ;Automation-5.c: 90: TXSTA1 = 0x00;
   491                           
   492                           ;incstack = 0
   493  007EA6  0E00               	movlw	0
   494  007EA8  6EAC               	movwf	4012,c	;volatile
   495                           
   496                           ;Automation-5.c: 91: RCSTA1 = 0x00;
   497  007EAA  0E00               	movlw	0
   498  007EAC  6EAB               	movwf	4011,c	;volatile
   499                           
   500                           ;Automation-5.c: 92: TXSTAbits.SYNC = 0;
   501  007EAE  98AC               	bcf	4012,4,c	;volatile
   502                           
   503                           ;Automation-5.c: 93: BAUDCON1bits.BRG16 = 1;
   504  007EB0  86B8               	bsf	4024,3,c	;volatile
   505                           
   506                           ;Automation-5.c: 94: RCSTA1bits.SPEN = 1;
   507  007EB2  8EAB               	bsf	4011,7,c	;volatile
   508                           
   509                           ;Automation-5.c: 95: RCSTA1bits.CREN = 1;
   510  007EB4  88AB               	bsf	4011,4,c	;volatile
   511                           
   512                           ;Automation-5.c: 96: TXSTA1bits.BRGH = 1;
   513  007EB6  84AC               	bsf	4012,2,c	;volatile
   514                           
   515                           ;Automation-5.c: 97: TXSTA1bits.TXEN = 1;
   516  007EB8  8AAC               	bsf	4012,5,c	;volatile
   517                           
   518                           ;Automation-5.c: 99: n = ((16000000/4)/baud) - 1;
   519  007EBA  0E00               	movlw	0
   520  007EBC  6E01               	movwf	___lldiv@dividend,c
   521  007EBE  0E09               	movlw	9
   522  007EC0  6E02               	movwf	___lldiv@dividend+1,c
   523  007EC2  0E3D               	movlw	61
   524  007EC4  6E03               	movwf	___lldiv@dividend+2,c
   525  007EC6  0E00               	movlw	0
   526  007EC8  6E04               	movwf	___lldiv@dividend+3,c
   527  007ECA  C00E  F005         	movff	uart_init1@baud,___lldiv@divisor
   528  007ECE  C00F  F006         	movff	uart_init1@baud+1,___lldiv@divisor+1
   529  007ED2  C010  F007         	movff	uart_init1@baud+2,___lldiv@divisor+2
   530  007ED6  C011  F008         	movff	uart_init1@baud+3,___lldiv@divisor+3
   531  007EDA  EC7A  F03F         	call	___lldiv	;wreg free
   532  007EDE  0EFF               	movlw	255
   533  007EE0  2401               	addwf	?___lldiv,w,c
   534  007EE2  6E12               	movwf	uart_init1@n,c
   535  007EE4  0EFF               	movlw	255
   536  007EE6  2002               	addwfc	?___lldiv+1,w,c
   537  007EE8  6E13               	movwf	uart_init1@n+1,c
   538                           
   539                           ;Automation-5.c: 100: SPBRGH1 = (n>>8);
   540  007EEA  5013               	movf	uart_init1@n+1,w,c
   541  007EEC  6EB0               	movwf	4016,c	;volatile
   542                           
   543                           ;Automation-5.c: 101: SPBRG1 = n & 0xFF;
   544  007EEE  C012  FFAF         	movff	uart_init1@n,4015	;volatile
   545  007EF2  0012               	return		;funcret
   546  007EF4                     __end_of_uart_init1:
   547                           	opt stack 0
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           indf2	equ	0xFDF
   557                           fsr2h	equ	0xFDA
   558                           fsr2l	equ	0xFD9
   559                           status	equ	0xFD8
   560                           
   561 ;; *************** function ___lldiv *****************
   562 ;; Defined at:
   563 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  dividend        4    0[COMRAM] unsigned long 
   566 ;;  divisor         4    4[COMRAM] unsigned long 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  quotient        4    8[COMRAM] unsigned long 
   569 ;;  counter         1   12[COMRAM] unsigned char 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  4    0[COMRAM] unsigned long 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   579 ;;      Params:         8       0       0       0       0       0       0
   580 ;;      Locals:         5       0       0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0
   582 ;;      Totals:        13       0       0       0       0       0       0
   583 ;;Total ram usage:       13 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_uart_init1
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text3
   593  007EF4                     __ptext3:
   594                           	opt stack 0
   595  007EF4                     ___lldiv:
   596                           	opt stack 29
   597                           
   598                           ;incstack = 0
   599  007EF4  0E00               	movlw	0
   600  007EF6  6E09               	movwf	___lldiv@quotient,c
   601  007EF8  0E00               	movlw	0
   602  007EFA  6E0A               	movwf	___lldiv@quotient+1,c
   603  007EFC  0E00               	movlw	0
   604  007EFE  6E0B               	movwf	___lldiv@quotient+2,c
   605  007F00  0E00               	movlw	0
   606  007F02  6E0C               	movwf	___lldiv@quotient+3,c
   607  007F04  5005               	movf	___lldiv@divisor,w,c
   608  007F06  1006               	iorwf	___lldiv@divisor+1,w,c
   609  007F08  1007               	iorwf	___lldiv@divisor+2,w,c
   610  007F0A  1008               	iorwf	___lldiv@divisor+3,w,c
   611  007F0C  B4D8               	btfsc	status,2,c
   612  007F0E  D02A               	goto	l405
   613  007F10  0E01               	movlw	1
   614  007F12  6E0D               	movwf	___lldiv@counter,c
   615  007F14  D006               	goto	l771
   616  007F16                     l769:
   617  007F16  90D8               	bcf	status,0,c
   618  007F18  3605               	rlcf	___lldiv@divisor,f,c
   619  007F1A  3606               	rlcf	___lldiv@divisor+1,f,c
   620  007F1C  3607               	rlcf	___lldiv@divisor+2,f,c
   621  007F1E  3608               	rlcf	___lldiv@divisor+3,f,c
   622  007F20  2A0D               	incf	___lldiv@counter,f,c
   623  007F22                     l771:
   624  007F22  AE08               	btfss	___lldiv@divisor+3,7,c
   625  007F24  D7F8               	goto	l769
   626  007F26                     l773:
   627  007F26  90D8               	bcf	status,0,c
   628  007F28  3609               	rlcf	___lldiv@quotient,f,c
   629  007F2A  360A               	rlcf	___lldiv@quotient+1,f,c
   630  007F2C  360B               	rlcf	___lldiv@quotient+2,f,c
   631  007F2E  360C               	rlcf	___lldiv@quotient+3,f,c
   632  007F30  5005               	movf	___lldiv@divisor,w,c
   633  007F32  5C01               	subwf	___lldiv@dividend,w,c
   634  007F34  5006               	movf	___lldiv@divisor+1,w,c
   635  007F36  5802               	subwfb	___lldiv@dividend+1,w,c
   636  007F38  5007               	movf	___lldiv@divisor+2,w,c
   637  007F3A  5803               	subwfb	___lldiv@dividend+2,w,c
   638  007F3C  5008               	movf	___lldiv@divisor+3,w,c
   639  007F3E  5804               	subwfb	___lldiv@dividend+3,w,c
   640  007F40  A0D8               	btfss	status,0,c
   641  007F42  D009               	goto	l781
   642  007F44  5005               	movf	___lldiv@divisor,w,c
   643  007F46  5E01               	subwf	___lldiv@dividend,f,c
   644  007F48  5006               	movf	___lldiv@divisor+1,w,c
   645  007F4A  5A02               	subwfb	___lldiv@dividend+1,f,c
   646  007F4C  5007               	movf	___lldiv@divisor+2,w,c
   647  007F4E  5A03               	subwfb	___lldiv@dividend+2,f,c
   648  007F50  5008               	movf	___lldiv@divisor+3,w,c
   649  007F52  5A04               	subwfb	___lldiv@dividend+3,f,c
   650  007F54  8009               	bsf	___lldiv@quotient,0,c
   651  007F56                     l781:
   652  007F56  90D8               	bcf	status,0,c
   653  007F58  3208               	rrcf	___lldiv@divisor+3,f,c
   654  007F5A  3207               	rrcf	___lldiv@divisor+2,f,c
   655  007F5C  3206               	rrcf	___lldiv@divisor+1,f,c
   656  007F5E  3205               	rrcf	___lldiv@divisor,f,c
   657  007F60  2E0D               	decfsz	___lldiv@counter,f,c
   658  007F62  D7E1               	goto	l773
   659  007F64                     l405:
   660  007F64  C009  F001         	movff	___lldiv@quotient,?___lldiv
   661  007F68  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   662  007F6C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   663  007F70  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   664  007F74  0012               	return		;funcret
   665  007F76                     __end_of___lldiv:
   666                           	opt stack 0
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           postdec1	equ	0xFE5
   674                           fsr1l	equ	0xFE1
   675                           indf2	equ	0xFDF
   676                           fsr2h	equ	0xFDA
   677                           fsr2l	equ	0xFD9
   678                           status	equ	0xFD8
   679                           
   680 ;; *************** function _strcmp *****************
   681 ;; Defined at:
   682 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcmp.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  s1              2    0[COMRAM] PTR const unsigned char 
   685 ;;		 -> value(13), 
   686 ;;  s2              2    2[COMRAM] PTR const unsigned char 
   687 ;;		 -> card(13), 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  r               1    5[COMRAM] char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  2    0[COMRAM] int 
   692 ;; Registers used:
   693 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   699 ;;      Params:         4       0       0       0       0       0       0
   700 ;;      Locals:         1       0       0       0       0       0       0
   701 ;;      Temps:          1       0       0       0       0       0       0
   702 ;;      Totals:         6       0       0       0       0       0       0
   703 ;;Total ram usage:        6 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_main
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text4
   713  007E60                     __ptext4:
   714                           	opt stack 0
   715  007E60                     _strcmp:
   716                           	opt stack 30
   717                           
   718                           ;incstack = 0
   719  007E60  D004               	goto	l809
   720  007E62                     l807:
   721  007E62  4A01               	infsnz	strcmp@s1,f,c
   722  007E64  2A02               	incf	strcmp@s1+1,f,c
   723  007E66  4A03               	infsnz	strcmp@s2,f,c
   724  007E68  2A04               	incf	strcmp@s2+1,f,c
   725  007E6A                     l809:
   726  007E6A  C001  FFD9         	movff	strcmp@s1,fsr2l
   727  007E6E  C002  FFDA         	movff	strcmp@s1+1,fsr2h
   728  007E72  50DF               	movf	indf2,w,c
   729  007E74  6E05               	movwf	??_strcmp& (0+255),c
   730  007E76  C003  FFD9         	movff	strcmp@s2,fsr2l
   731  007E7A  C004  FFDA         	movff	strcmp@s2+1,fsr2h
   732  007E7E  50DF               	movf	indf2,w,c
   733  007E80  0800               	sublw	0
   734  007E82  2405               	addwf	??_strcmp,w,c
   735  007E84  6E06               	movwf	strcmp@r,c
   736  007E86  5006               	movf	strcmp@r,w,c
   737  007E88  A4D8               	btfss	status,2,c
   738  007E8A  D007               	goto	l813
   739  007E8C  C001  FFD9         	movff	strcmp@s1,fsr2l
   740  007E90  C002  FFDA         	movff	strcmp@s1+1,fsr2h
   741  007E94  50DF               	movf	indf2,w,c
   742  007E96  A4D8               	btfss	status,2,c
   743  007E98  D7E4               	goto	l807
   744  007E9A                     l813:
   745  007E9A  5006               	movf	strcmp@r,w,c
   746  007E9C  6E01               	movwf	?_strcmp,c
   747  007E9E  6A02               	clrf	?_strcmp+1,c
   748  007EA0  BE01               	btfsc	?_strcmp,7,c
   749  007EA2  0602               	decf	?_strcmp+1,f,c
   750  007EA4  0012               	return	
   751  007EA6                     __end_of_strcmp:
   752                           	opt stack 0
   753  0000                     tblptru	equ	0xFF8
   754                           tblptrh	equ	0xFF7
   755                           tblptrl	equ	0xFF6
   756                           tablat	equ	0xFF5
   757                           postinc0	equ	0xFEE
   758                           wreg	equ	0xFE8
   759                           postdec1	equ	0xFE5
   760                           fsr1l	equ	0xFE1
   761                           indf2	equ	0xFDF
   762                           fsr2h	equ	0xFDA
   763                           fsr2l	equ	0xFD9
   764                           status	equ	0xFD8
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           postdec1	equ	0xFE5
   772                           fsr1l	equ	0xFE1
   773                           indf2	equ	0xFDF
   774                           fsr2h	equ	0xFDA
   775                           fsr2l	equ	0xFD9
   776                           status	equ	0xFD8
   777                           
   778                           	psect	rparam
   779  0000                     tblptru	equ	0xFF8
   780                           tblptrh	equ	0xFF7
   781                           tblptrl	equ	0xFF6
   782                           tablat	equ	0xFF5
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           postdec1	equ	0xFE5
   786                           fsr1l	equ	0xFE1
   787                           indf2	equ	0xFDF
   788                           fsr2h	equ	0xFDA
   789                           fsr2l	equ	0xFD9
   790                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 13
		 -> card(COMRAM[13]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 13
		 -> value(COMRAM[13]), 


Critical Paths under _main in COMRAM

    _main->_uart_init1
    _uart_init1->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     731
                                             19 COMRAM     4     4      0
                             _strcmp
                         _uart_init1
                          _uart_rec1
 ---------------------------------------------------------------------------------
 (1) _uart_rec1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_init1                                           6     2      4     421
                                             13 COMRAM     6     2      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _strcmp
   _uart_init1
     ___lldiv
   _uart_rec1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      31       1       51.6%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31       9        0.0%
DATA                 0      0      31      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jan 12 12:11:09 2018

                     l51 7FFC                       l38 7E18             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l405 7F64                      l813 7E9A                      l807 7E62  
                    l823 7FA0                      l809 7E6A                      l825 7FA8  
                    l771 7F22                      l835 7FD0                      l781 7F56  
                    l773 7F26                      l829 7FB8                      l769 7F16  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      wreg 000FE8  
             _TXSTA1bits 000FAC             __CFG_LVP$OFF 000000                     _card 0025  
                   _main 7F76                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9            __CFG_BORV$190 000000  
                   start 0000            __CFG_IESO$OFF 000000             ___param_bank 000000  
           _BAUDCON1bits 000FB8                    ?_main 0001          __end_of___lldiv 7F76  
                  _RC1IF 007CF5                    _TRISB 000F93                    _TRISC 000F94  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000                    _value 0018  
                  main@c 0014                    main@i 0016                    tablat 000FF5  
                  status 000FD8           __CFG_FOSC$HSMP 000000          __initialization 7E2E  
           __end_of_main 8000                   ??_main 0014            __activetblptr 000000  
                 _ANSELB 000F39                   _ANSELC 000F3A           __CFG_WDTEN$OFF 000000  
                 _RCREG1 000FAE                   _RCSTA1 000FAB                   _SPBRG1 000FAF  
                 _TXSTA1 000FAC           __CFG_XINST$OFF 000000                ??___lldiv 0009  
                 clear_0 7E54                   _strcmp 7E60             __pdataCOMRAM 0025  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
        __CFG_HFOFST$OFF 000000               __accesstop 0060  __end_of__initialization 7E5A  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
        __CFG_PLLCFG$OFF 000000       __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000  
                ?_strcmp 0001       __size_of_uart_rec1 0008        __CFG_PRICLKEN$OFF 000000  
                _SPBRGH1 000FB0          __CFG_PWRTEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___lldiv 7EF4          __CFG_STVREN$OFF 000000  
                __pcinit 7E2E                  __ramtop 0600                  __ptext0 7F76  
                __ptext1 7E18                  __ptext2 7EA6                  __ptext3 7EF4  
                __ptext4 7E60          __size_of_strcmp 0046     end_of_initialization 7E5A  
      __end_of_uart_rec1 7E20          ___lldiv@divisor 0005          ___lldiv@counter 000D  
                postdec1 000FE5                  postinc0 000FEE               _uart_init1 7EA6  
                strcmp@r 0006              uart_init1@n 0012                _PORTAbits 000F80  
              _TXSTAbits 000FAC            __pidataCOMRAM 7E21           __end_of_strcmp 7EA6  
    start_initialization 7E2E              ?_uart_init1 000E                 ??_strcmp 0005  
            __pbssCOMRAM 0018                 ?___lldiv 0001      __size_of_uart_init1 004E  
       __CFG_WDTPS$32768 000000                _uart_rec1 7E18                copy_data0 7E42  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
             ?_uart_rec1 0001        __CFG_P2BMX$PORTD2 000000         __size_of___lldiv 0082  
         uart_init1@baud 000E            __size_of_main 008A             ??_uart_init1 0012  
       ___lldiv@dividend 0001       __end_of_uart_init1 7EF4               _RCSTA1bits 000FAB  
            ??_uart_rec1 0001                 strcmp@s1 0001                 strcmp@s2 0003  
       ___lldiv@quotient 0009        __CFG_T3CMX$PORTC0 000000  
